#!/bin/sh

# 用 `` 可以将命令的输出结果赋值给变量
# 获取当前提交的 commit msg
commit_msg=`cat $1`

# 获取用户 email
email=`git config user.email`

logError(){
  echo "\n不合法的 commit 消息提交格式，请使用正确的格式：\
	\nfeat: add comments\
	\nfix: handle events on blur (close #28)\
	\n详情请查看 git commit 提交规范"

  # feat: 新功能、新特性
  # fix: 修改 bug
  # perf: 更改代码，以提高性能（在不影响代码内部行为的前提下，对程序性能进行优化）
  # refactor: 代码重构（重构，在不影响代码内部行为、功能下的代码修改）
  # docs: 文档修改
  # style: 代码格式修改, 注意不是 css 修改（例如分号修改）
  # test: 测试用例新增、修改
  # build: 影响项目构建或依赖项修改
  # revert: 恢复上一次提交
  # ci: 持续集成相关文件修改
  # chore: 其他修改（不在上述类型中的修改）
  # release: 发布新版本

	# 异常退出
	exit 1
}

msg_re="^(feat|fix|docs|style|refactor|perf|test|workflow|build|ci|chore|release|workflow)(\(.+\))?: .{1,100}"

if [[ ! $commit_msg =~ $msg_re ]]
then
	logError
fi


